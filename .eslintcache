[{"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\index.js":"1","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\reportWebVitals.js":"2","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\App.js":"3","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\Todos.js":"4","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\TodoItem.js":"5","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\layout\\Header.js":"6","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\AddTodo.js":"7","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\about\\About.js":"8"},{"size":267,"mtime":1607476899623,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":1990,"mtime":1607557159195,"results":"12","hashOfConfig":"10"},{"size":617,"mtime":1607557361297,"results":"13","hashOfConfig":"10"},{"size":1089,"mtime":1607557384292,"results":"14","hashOfConfig":"10"},{"size":569,"mtime":1607556632633,"results":"15","hashOfConfig":"10"},{"size":970,"mtime":1607557429178,"results":"16","hashOfConfig":"10"},{"size":156,"mtime":1607554987349,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"fiaypq",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\index.js",[],["37","38"],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\reportWebVitals.js",[],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\App.js",["39"],"import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport { v4 as uuid } from 'uuid';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './components/about/About';\nimport './App.css';\n\nexport default class App extends Component {\n  state = {\n    todos: [],\n  };\n\n  componentDidMount() {\n    axios\n      .get('https://jsonplaceholder.typicode.com/todos?_limit=4')\n      .then(res => this.setState({ todos: res.data }));\n  }\n\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.complete = !todo.complete;\n        }\n        return todo;\n      }),\n    });\n  };\n\n  delTodo = id => {\n    axios\n      .delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n      .then(res =>\n        this.setState({\n          todos: [...this.state.todos.filter(todo => todo.id !== id)],\n        })\n      );\n  };\n\n  addTodo = title => {\n    axios\n      .post('https://jsonplaceholder.typicode.com/todos', {\n        title,\n        completed: false,\n      })\n      .then(res => {\n        this.setState({ todos: [...this.state.todos, res.data] });\n      });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className='App'>\n          <div className='container'>\n            <Header />\n            <Route\n              exact\n              path='/'\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                </React.Fragment>\n              )}\n            />\n            <Route path='/about' component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n","C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\Todos.js",[],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\TodoItem.js",[],["40","41"],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\layout\\Header.js",[],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\AddTodo.js",[],"C:\\Coding\\Web\\web-udemy-react\\youtube\\src\\components\\about\\About.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":4,"column":16,"nodeType":"48","messageId":"49","endLine":4,"endColumn":20},{"ruleId":"42","replacedBy":"50"},{"ruleId":"44","replacedBy":"51"},"no-native-reassign",["52"],"no-negated-in-lhs",["53"],"no-unused-vars","'uuid' is defined but never used.","Identifier","unusedVar",["52"],["53"],"no-global-assign","no-unsafe-negation"]